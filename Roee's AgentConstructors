#pragma once

#include <vector>
#include "Graph.h"

class SelectionPolicy;

class Agent
{
public:
    Agent(int agentId, int partyId, SelectionPolicy *selectionPolicy);

    //Rule Of 5 :
    virtual ~ Agent();                        //Destructor
    Agent(const Agent & other);               //CopyConstructor
    Agent(Agent && other);                    //MoveConstructor
    Agent & operator=(const Agent & other);   //CopyAssignment
    Agent & operator=(Agent && other);        //MoveAssignment

    int getPartyId() const;
    int getId() const;
    void step(Simulation &);

private:
    int mAgentId;
    int mPartyId;
    SelectionPolicy *mSelectionPolicy;
    int mCoalitionId;

};
